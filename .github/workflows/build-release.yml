name: Build Release APK

# Workflow wird manuell ausgelÃ¶st
on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version Name (e.g., 1.0.0)'
        required: true
      version_code:
        description: 'Version Code (Integer)'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Update version in build.gradle
        run: |
          # Version aus Input-Parametern
          VERSION_NAME=${{ github.event.inputs.version_name }}
          VERSION_CODE=${{ github.event.inputs.version_code }}
          
          # build.gradle aktualisieren
          sed -i "s/versionCode [0-9]*/versionCode $VERSION_CODE/" app/build.gradle
          sed -i "s/versionName \"[^\"]*\"/versionName \"$VERSION_NAME\"/" app/build.gradle
          
          echo "Version aktualisiert auf $VERSION_NAME ($VERSION_CODE)"
        
      - name: Build Release APK
        run: ./gradlew assembleRelease
        
      - name: Get APK path
        id: apk-path
        run: |
          APK_PATH=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)
          echo "APK-Pfad: $APK_PATH"
          echo "path=$APK_PATH" >> $GITHUB_OUTPUT
          
      - name: Create Release Tag
        id: create_tag
        run: |
          TAG_NAME=v${{ github.event.inputs.version_name }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a $TAG_NAME -m "Release $TAG_NAME"
          git push origin $TAG_NAME
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
        
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          name: Release ${{ github.event.inputs.version_name }}
          files: ${{ steps.apk-path.outputs.path }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Commit version changes
        run: |
          git add app/build.gradle
          git commit -m "Bump version to ${{ github.event.inputs.version_name }} (code ${{ github.event.inputs.version_code }})"
          git push